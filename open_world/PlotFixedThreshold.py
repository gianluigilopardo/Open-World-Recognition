import numpy as np
import pandas as pd
import seaborn as sns
from matplotlib import pyplot as plt


def average_dict(dict1, dict2, dict3):
    d = {}
    for k, _ in dict1.items():
        d[k] = [np.round((a + b +c )/3, 3) for a,b,c in zip(dict1[k], dict2[k], dict3[k])]
    return d

def average_list_rounded(list1, list2, list3):
    l = [np.round((a + b +c )/3, 3) for a,b,c in zip(list1, list2, list3)]
    return l
################### OWH ####################################################
icarl_24 = {'0.3': [0.006376356499653659, 0.024394247262171792, 0.05993965767333913, 0.10842118039751177, 0.14646271558482282],
            '0.4': [0.04783641279855791, 0.09962084592145017, 0.17234892022131001, 0.23070353952124395, 0.2928670988654781],
            '0.5': [0.12669948186528499, 0.2195459272097054, 0.3013005543504459, 0.3637067781427292, 0.40096903011619633],
            '0.6': [0.23677922077922076, 0.3418770570124217, 0.4149169075144508, 0.45128381506001397, 0.4708748036510295],
            '0.7': [0.3272698961937716, 0.434569144210838, 0.4908272431858877, 0.5032942637198908, 0.5010298056155508],
            '0.8': [0.4216633448088422, 0.5163366082086126, 0.5411360837438424, 0.5313354313217327, 0.5039880199667222]}
icarl_42 = {'0.3': [0.005978622327790974, 0.02477697841726619, 0.07060796492510046, 0.10523819197562215, 0.17063794135248356],
            '0.4': [0.04590564722286777, 0.11195670777749812, 0.1877627289531171, 0.2437901498929336, 0.32247973387922213],
            '0.5': [0.13355962897526502, 0.2196502221183072, 0.3125513357180912, 0.37672581843112607, 0.42218893694514],
            '0.6': [0.24958273381294963, 0.34708644610458916, 0.4172637446867814, 0.4663198011599005, 0.4804152277928021],
            '0.7': [0.3402599459250676, 0.4407614914184257, 0.49606635802469146, 0.5221768388854371, 0.5077754031474645],
            '0.8': [0.42826093294460643, 0.5131748638922212, 0.5521875827216942, 0.5519809626436782, 0.508472942920682]}
icarl_1993 = {'0.3': [0.010727678571428572, 0.027873662229182986, 0.06444030607541254, 0.1072587392342766, 0.15640185471406493],
              '0.4': [0.0685368068833652, 0.11993203644422554, 0.18644594594594593, 0.24148244473342004, 0.2975928936742934],
              '0.5': [0.16076669675090252, 0.235225585379783, 0.3183475285171103, 0.372120548576697, 0.40051349546971865],
              '0.6': [0.28899729223078524, 0.35552411033901876, 0.42291692822766275, 0.4609087095590163, 0.4685458502240239],
              '0.7': [0.3836936370777691, 0.44301488711426595, 0.49694389738274164, 0.5168447000821692, 0.49507018239492473],
              '0.8': [0.47275366032210836, 0.5226359143327841, 0.546750136886293, 0.5398095673648586, 0.49345303201506585]}

icarl_OWH = average_dict(icarl_24, icarl_42, icarl_1993)
# print(icarl_OWH)
icarl_OWH_db = pd.DataFrame(icarl_OWH, index=list(range(10, 60, 10)))

# BiC

bic_24 = {'0.3': [0.022486994219653184, 0.03589825542682115, 0.10922664861728873, 0.15314193885940655, 0.19889850560398503],
          '0.4': [0.10583210671573137, 0.13630995390556871, 0.2702816544024359, 0.3157674418604651, 0.3582134565998973],
          '0.5': [0.21602586764388873, 0.2789654939867371, 0.40730299667036624, 0.43491798177372754, 0.4524348785871965],
          '0.6': [0.34674826147426985, 0.4073988959313024, 0.4954439784301978, 0.5065766859059742, 0.49100343039489425],
          '0.7': [0.4452234636871508, 0.5052413793103447, 0.5388224333662389, 0.5284096763768986, 0.4970540861812779],
          '0.8': [0.523572695035461, 0.5734974926508732, 0.554966540587722, 0.525274360987525, 0.4680333927934356]}
bic_42 = {'0.3': [0.012305343511450382, 0.05172298445054227, 0.094642221623079, 0.17372279972279972, 0.15935691158156912],
          '0.4': [0.0823544961057352, 0.17992870003601005, 0.24761143952708103, 0.333711782005882, 0.3160507399577167],
          '0.5': [0.1898844877185218, 0.32806103589082314, 0.3865985359960202, 0.4479452448035724, 0.4318869959220661],
          '0.6': [0.33431280388978923, 0.45701447596989, 0.48405722088562325, 0.5165868483355075, 0.4856887335526316],
          '0.7': [0.44241937300544404, 0.5401229449606862, 0.5455255160724015, 0.5450976684997499, 0.5092960152526216],
          '0.8': [0.5278318739054291, 0.5900472972972972, 0.581742263913516, 0.5545365853658536, 0.5019977499546362]}
bic_1993 = {'0.3': [0.020515891778303125, 0.03856463752806022, 0.09128704566635601, 0.1218070662365914, 0.18296192560175054],
            '0.4': [0.09792184368737476, 0.14292537313432838, 0.24386694386694385, 0.28468409783948617, 0.3409323936309058],
            '0.5': [0.22139392544868847, 0.2743135574103316, 0.3807963386727688, 0.41832286793303647, 0.44350300583221175],
            '0.6': [0.355298652064027, 0.41894836627672444, 0.47287463714305, 0.492086930060354, 0.4866843002028397],
            '0.7': [0.44349951124144676, 0.5047451531329026, 0.5308744203534277, 0.5218104544160895, 0.49769696287964005],
            '0.8': [0.520015785609398, 0.5701278634265309, 0.5610269984118581, 0.5319928692396826, 0.48077620658949244]}
bic_OWH = average_dict(bic_24, bic_42, bic_1993)
# print(icarl_OWH)
bic_OWH_db = pd.DataFrame(bic_OWH, index=list(range(10, 60, 10)))
bic_OWH_db.transpose().to_csv("differentThresholdsBic.csv")
# print(f"BiC owh 0.8 : {bic_OWH['0.8']}")
# Plot
# sns.set_style('whitegrid')
# fig, ax = plt.subplots(1, 2)  # How many subplots you want?
# icarl_OWH_db.plot(ax=ax[0], marker ='d')
# ax[0].tick_params(labelsize=14)
# ax[0].set_xlabel('Number of classes', fontsize=14)
# ax[0].set_ylabel('OWH', fontsize=14)
# ax[0].set_title('iCaRL')
# ax[0].legend()
#
# bic_OWH_db.plot(ax=ax[1], marker ='d')
# ax[1].tick_params(labelsize=14)
# ax[1].set_xlabel('Number of classes', fontsize=14)
# ax[1].set_ylabel('OWH', fontsize=14)
# ax[1].set_title('BiC')
# ax[1].legend()
# plt.show()
#
# fig.savefig('icarl_BiC_OWHs.eps', format='eps')

# Naive strategy fix the threshold at 0.5
naive_dict = {'iCaRL' : icarl_OWH['0.5'], 'BiC' : bic_OWH['0.5']}
naive_strategy_db = pd.DataFrame(naive_dict, index=list(range(10, 60, 10)))
print(naive_strategy_db)
sns.set_style('whitegrid')
fig, ax = plt.subplots(1,1)  # How many subplots you want?
naive_strategy_db.plot(ax=ax, marker ='d')
ax.tick_params(labelsize=14)
ax.set_xlabel('Number of classes', fontsize=14)
ax.set_ylabel('OWH', fontsize=14)
ax.legend()
plt.show()
# fig.savefig('naive_rejection_strategy.eps', format='eps')

####### Modification - OWH

owh_1993 = [0.49282174147056185, 0.46744240257974284, 0.4422940729909156, 0.44851130398803385, 0.4239138979878334]
owh_42 = [0.4850073801880659, 0.46071474236031196, 0.46582135257426743, 0.4867512658783586, 0.45676615787178365]
owh_24 = [0.49862142696376327, 0.45770233303767127, 0.43180983034322823, 0.44201402651645444, 0.45514229335672]

owh = average_list_rounded(owh_24, owh_42, owh_1993)

cwnr_1993 = [0.732, 0.7225, 0.669, 0.60925, 0.5384]

cwnr_42 = [0.797, 0.7165, 0.6773333333333333, 0.61775, 0.5614]
cwnr_24 = [0.824, 0.745, 0.6416666666666667, 0.59425, 0.5406]

cwnr = average_list_rounded(cwnr_24, cwnr_42, cwnr_1993)


cwwr_1993 = [0.655, 0.65, 0.573, 0.53225, 0.466]

cwwr_42 = [0.691, 0.639, 0.6023333333333334, 0.52725, 0.4876]
cwwr_24 = [0.74, 0.667, 0.5806666666666667, 0.53575, 0.477]

cwwr = average_list_rounded(cwwr_24, cwwr_42, cwwr_1993)

owa_1993 = [0.39501569858712715, 0.3649447949526814, 0.3601426307448494, 0.38753980891719747, 0.3888]
owa_42 = [0.37362637362637363, 0.3602129337539432, 0.37975435816164815, 0.45203025477707004, 0.4296]
owa_24 = [0.37598116169544743, 0.3483832807570978, 0.34370047543581617, 0.37619426751592355, 0.4352]

owa = average_list_rounded(owa_24, owa_42, owa_1993)

modification_stats = pd.DataFrame({'CW no rejection' : cwnr,
                           'CW with rejection' : cwwr,
                           'Open World' : owa,
                            'Open World Harmonic Mean' : owh}, index=list(range(10, 60, 10)))
print('Modification - rejection strategy')
print(modification_stats.transpose())
modification_stats.transpose().to_csv("rejectionModification_results.csv")

modification_comparison = pd.DataFrame({'Learned Thresholds' : owh ,
                           '0.5' : bic_OWH['0.5'],
                           '0.8' : bic_OWH['0.8']}, index=list(range(10, 60, 10)))

sns.set_style('whitegrid')
fig, ax = plt.subplots(1,1)  # How many subplots you want?
modification_comparison.plot(ax=ax, marker ='d')
ax.tick_params(labelsize=14)
ax.set_xlabel('Number of classes', fontsize=14)
ax.set_ylabel('OWH', fontsize=14)
ax.legend()
plt.show()
# fig.savefig('modification_rejection_strategy.eps', format='eps')

print("\n BiC 08 OWH \n")
print(bic_OWH['0.8'])